package daoImpl;

import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;
import org.apache.struts2.interceptor.SessionAware;
//import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.classic.Session;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ModelDriven;

import actionForm.Client_View;
import util.HibernateUtil;

/**
 * @author VS60001724
 * 
 */
public class Client_View_DaoImpl extends HibernateUtil implements ModelDriven<Object>, SessionAware {

	private static Logger logger = Logger.getLogger(Client_View_DaoImpl.class);
	private static final long serialVersionUID = -8529954406689834217L;
	private Map<String, Object> usersession;

	/**
	 * @param view
	 *            Client View Transactions
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<Client_View> list(Client_View view) {

		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		session.beginTransaction();

		usersession = ActionContext.getContext().getSession();

		String abcd = (String) usersession.get("user1");

		logger.debug("From DAOIMPL Class:" + abcd);

		List<Client_View> details = null;
		try {
			Query query = session.createQuery("From Client_View WHERE clid=:clid");
			query.setParameter("clid", abcd);
			details = query.list();
			
		} catch (Exception e) {
			logger.error("Error in listing:"+e);
			session.getTransaction().rollback();
		}
		session.getTransaction().commit();

		return details;

	}

	/**
	 * @param abc
	 *            Client View Current Balance
	 * @return
	 */
	public Client_View vish(Client_View abc) {

		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		session.beginTransaction();

		usersession = ActionContext.getContext().getSession();

		String abcd = (String) usersession.get("user1");

		try {
			String SQL_QUERY = "SELECT view.amount FROM Client_View view WHERE view.clid =:clid"
					+ " ORDER BY view.id DESC LIMIT 1";

			Query query = session.createQuery(SQL_QUERY);
			query.setParameter("clid", abcd);
			
			@SuppressWarnings("rawtypes")
			List results = query.list();
			String f_amount = (String) results.get(0);

			abc.setNamount(f_amount);
		} catch (Exception e) {
			logger.error("Error:"+e);
		}

		session.getTransaction().commit();
		return abc;
	}

	public void setUsersession(Map<String, Object> usersession) {
		this.usersession = usersession;
	}

	public Object getModel() {

		return null;
	}

	public void setSession(Map<String, Object> arg0) {
		//Autogenerated
	}

}